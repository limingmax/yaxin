<?xml version="1.0" encoding="UTF-8"?>
<!--全局默认配置信息-->
<defaults>
	<!--中心的类型和实现类的对应关系-->
	<center>
		<property name="regionid" value="com.ai.sfframe.commons.complex.center.RegionCenterImpl"/>
		<!-- comframe -->
		<property name="RegionId" value="com.ai.sfframe.commons.complex.center.RegionCenterImpl"/>
	</center>
	<!--默认代理调用方式.默认采用pojo的模式进行调用，采用的实现类为配置的实现类-->
	<proxy invoke="pojo" type="primitive">
		<clazz name="com.ai.appframe2.complex.service.impl.LocalServiceInvokeImpl"/>
	</proxy>
	<!--默认事务信息.默认采用Required的方式进行事务操作，采用的实现类为配置的实现类-->
	<transaction type="Required">
		<clazz name="com.ai.appframe2.complex.transaction.impl.LocalMutilTransactionImpl"/>
		<mapping>
			<property name="com.test.dao" value="base"/>
		</mapping>
	</transaction>
	<!--默认数据源信息-->
	<datasource>
		<clazz name="com.ai.appframe2.complex.datasource.impl.LocalMutilDataSourceImpl">
			<property name="tableName" value="cfg_db_acct"/>
		</clazz>

		<!--根据base取数据库配置，然后以本配置中的覆盖除base以外的连接池的配置-->
		<!--默认 type=dbcp  db=mysql -->
		<pool name="base" primary="true">
			<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
			<property name="url" value="jdbc:mysql://180.76.50.109:3306/oss_base"/>
			<property name="username" value="root"/>
			<property name="password" value="root123"/>

			<property name="initialSize" value="2"/>
			<property name="maxActive" value="10"/>
			<property name="maxIdle" value="10"/>
			<property name="maxWait" value="20000"/>
			<!--连接泄漏检查,180秒后回收物理数据库连接到数据库中-->
			<property name="removeAbandoned" value="true"/>
			<property name="removeAbandonedTimeout" value="180"/>
			<property name="logAbandoned" value="true"/>
			<!--连接池有效性检查-->
			<property name="validationQuery" value="select 1 from dual"/>
			<property name="testWhileIdle" value="true"/>
			<property name="testOnBorrow" value="false"/>
			<property name="testOnReturn" value="false"/>
			<!--最多20秒检查到连接失效-->
			<property name="timeBetweenEvictionRunsMillis" value="30000"/>
			<property name="numTestsPerEvictionRun" value="2"/>
		</pool>
		<!--映射每个DAO模块对应的操作数据源-->
		<mapping>
			<property name="com.test.dao" value="base"/>

			<!--&lt;!&ndash; 平台自带 &ndash;&gt;-->
			<!--<property name="com.ai.common" value="base"/>-->
			<!--<property name="com.ai.appframe2" value="base"/>-->
			<!--&lt;!&ndash; 平台扩展 &ndash;&gt;-->
			<!--<property name="com.asiainfo.appframe.ext.exeframe" value="base"/>-->
			<!--&lt;!&ndash; oss_com &ndash;&gt;-->
			<!--<property name="com.ai.sfframe.commons" value="base"/>-->
			<!--<property name="com.ai.sfframe.commons.complex.table.remote" value="ins"/>-->
			<!--<property name="com.ai.sfframe.commons.complex.table.remote.base" value="base"/>-->
			<!--<property name="com.ai.sfframe.commons.cust.plugin.impl" value="ins"/>-->
			<!--<property name="com.ai.sfframe.commons.mco.order" value="ins"/>-->
			<!--<property name="com.ai.sfframe.commons.queue" value="ins"/>-->
			<!--&lt;!&ndash; oss &ndash;&gt;-->
			<!--<property name="com.ai.oss" value="base"/>-->
			<!--<property name="com.ai.oss.sf.bomgmt" value="ins"/>-->
		</mapping>
	</datasource>

	<!--包含的服务配置文件-->
	<!-- 平台 -->
	<!--<include type="sv" classpath="system/service/appframe-service.xml"/>-->
	<!-- oss common工程包 -->
	<!--<include type="sv" classpath="system/service/sfframe/com-service.xml"/>-->
	<!-- oss res工程包 -->
	<!--<include type="sv" classpath="system/service/sfframe/res-service.xml"/>-->
	<!-- oss sa工程包 -->
	<!--<include type="sv" classpath="system/service/sfframe/sa-service.xml"/>-->
	<!-- oss sf工程包 -->
	<!--<include type="sv" classpath="system/service/sfframe/sf-service.xml"/>-->
	<!-- oss wf工程包 -->
	<!--<include type="sv" classpath="system/service/sfframe/wf-service.xml"/>-->

</defaults>